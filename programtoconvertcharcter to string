#include<bits/stdc++.h>
#include<string.h>


using namespace std;

int main() {
    int t;
    string s,b;
    cin>>t;
    while(t--)
    {


    cin>>s;
    cin>>b;

    int n = s.length();
    int m = b.length();

    char char_array[n+1];
    char char_array2[m+1];

    sort(s.begin(),s.end());
    sort(b.begin(),b.end());

    strcpy(char_array,s.c_str());
    strcpy(char_array2,b.c_str());

    for(int i=0;i<n;i++){
     cout<<char_array[i]<<" ";
    }

    cout<<"\n";

    for(int j=0;j<m;j++){
     cout<<char_array2[j]<<" ";
    }

    cout<<"done"<<endl;


     if(n!= m)
      cout<<"0"<<endl;
     else {

     int flag = 0;
      for(int i=0;i<m;i++){
       for(int j=0;j<n;j++){
       cout<<char_array[i]<<" ? "<<char_array2[j]<<endl;

        if(char_array[i] == char_array2[j]){
         flag = 1;
         i++;
        break ; }
       }
       if(flag == 1) break; }

     if(flag == 0)cout<<"yes"<<endl;
     else if(flag == 1) cout<<"no"<<endl;  }

    }

	return 0;
}


void levelorder(struct node* root){

 queue<int>Q;

 Q.push_back(root->data);

  while(Q.empty()!= 0){
  Node *current = Q.front();
   Q.pop();
   cout<<current->data<<" ";
   if(current->left!= NULL) Q.push_back(current->left);
   if(current->right!= NULL) Q.push_back(current->right);
 }

}


